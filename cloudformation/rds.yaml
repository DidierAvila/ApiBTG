AWSTemplateFormatVersion: '2010-09-09'
Description: 'RDS SQL Server for ApiBTG'

Parameters:
  Environment:
    Type: String
    Default: production
    AllowedValues: [development, staging, production]
    Description: Environment name

  DBInstanceClass:
    Type: String
    Default: db.t3.micro
    AllowedValues: [db.t3.micro, db.t3.small, db.t3.medium, db.r5.large, db.r5.xlarge]
    Description: RDS instance class

  DBName:
    Type: String
    Default: BTG
    Description: Database name

  DBUsername:
    Type: String
    Default: admin
    Description: Database master username

  DBPassword:
    Type: String
    NoEcho: true
    Description: Database master password
    MinLength: 8

  VPCId:
    Type: String
    Description: VPC ID where the RDS instance will be created

  PrivateSubnet1Id:
    Type: String
    Description: Private Subnet 1 ID

  PrivateSubnet2Id:
    Type: String
    Description: Private Subnet 2 ID

Resources:
  # DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for ApiBTG RDS
      SubnetIds:
        - !Ref PrivateSubnet1Id
        - !Ref PrivateSubnet2Id
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-ApiBTG-DB-Subnet-Group'

  # Security Group for RDS
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ApiBTG RDS
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433
          SourceSecurityGroupId: !Ref ECSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-ApiBTG-DB-SecurityGroup'

  # RDS Instance
  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub '${Environment}-apibtg-db'
      DBInstanceClass: !Ref DBInstanceClass
      Engine: sqlserver-ex
      EngineVersion: '15.00.4153.1.v1'
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBName: !Ref DBName
      AllocatedStorage: 20
      StorageType: gp2
      StorageEncrypted: true
      BackupRetentionPeriod: 7
      MultiAZ: true
      AutoMinorVersionUpgrade: true
      PubliclyAccessible: false
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      DeletionProtection: true
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-ApiBTG-DB'

  # Secrets Manager for Database Credentials
  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${Environment}/apibtg/database'
      Description: Database credentials for ApiBTG
      SecretString: !Sub |
        {
          "username": "${DBUsername}",
          "password": "${DBPassword}",
          "engine": "sqlserver",
          "host": "${DBInstance.Endpoint.Address}",
          "port": 1433,
          "dbname": "${DBName}"
        }
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-ApiBTG-DB-Secret'

Outputs:
  DBEndpoint:
    Description: Database endpoint
    Value: !GetAtt DBInstance.Endpoint.Address
    Export:
      Name: !Sub '${Environment}-ApiBTG-DB-Endpoint'

  DBPort:
    Description: Database port
    Value: !GetAtt DBInstance.Endpoint.Port
    Export:
      Name: !Sub '${Environment}-ApiBTG-DB-Port'

  DBSecretArn:
    Description: Database secret ARN
    Value: !Ref DBSecret
    Export:
      Name: !Sub '${Environment}-ApiBTG-DB-Secret-ARN'

  DBSecurityGroupId:
    Description: Database security group ID
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub '${Environment}-ApiBTG-DB-SecurityGroup-ID' 